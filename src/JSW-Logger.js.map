{"version":3,"sources":["JSW-Logger.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb;;;;;;;GAOG;AAEH,0BAA4B;AAE5B,IAAM,gBAAgB,GAAG,aAAa,CAAC;AAEvC,qBAAqB;AACrB,IAAM,SAAS,GAAG,MAAM,EAAE,CAAC;AAC3B,IAAM,iBAAiB,GAAG,MAAM,EAAE,CAAC;AAEnC;IAeI,iBAAY,OAAQ;QARZ,qBAAgB,GAAG;YACvB,KAAK,EAAE,CAAC;YACR,WAAW,EAAE,KAAK;YAClB,YAAY,EAAE,KAAK;YACnB,UAAU,EAAE,IAAI;YAChB,wBAAwB,EAAE,+BAA+B;SAC5D,CAAC;QAGE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACnB,OAAO,GAAG,EAAE,CAAA;QAChB,CAAC;QAED,IAAI,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC3E,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAChH,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QACpH,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;QAC5G,IAAI,CAAC,wBAAwB,GAAG,CAAC,OAAO,CAAC,wBAAwB,GAAG,OAAO,CAAC,wBAAwB,GAAG,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;IAC3J,CAAC;IACL,cAAC;AAAD,CA1BA,AA0BC,IAAA;AAED,IAAM,MAAM,GAAG;IACX,OAAO,EAAK,CAAC;IACb,OAAO,EAAK,CAAC;IACb,SAAS,EAAG,CAAC;IACb,KAAK,EAAO,CAAC;IACb,MAAM,EAAM,CAAC;IACb,MAAM,EAAM,CAAC;IACb,OAAO,EAAK,CAAC;CAChB,CAAC;AAEF,IAAM,UAAU,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AAEjF,qBAAqB,MAAM,EAAE,MAAM;IAC/B,IAAI,GAAG,GAAG,MAAM,CAAC;IACjB,IAAI,CAAC,GAAG,CAAC,CAAC;IAEV,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;QACrB,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;YAC/B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;YACtC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC;QAED,CAAC,EAAE,CAAC;IACR,CAAC;IAED,MAAM,CAAC,GAAG,CAAC;AACf,CAAC;AAED,kCAAkC;AAClC,kCAAkC;AAClC,yBAAyB;AACzB,8CAA8C;AAC9C,2BAA2B;AAC3B,kBAAkB;AAClB,mBAAmB;AACnB,wBAAwB;AACxB,YAAY;AACZ,UAAU;AACV,IAAI;AAEJ;;;;;;;;;;;;;;;;;;;GAmBG;AACH;IAGI,mBAAY,QAAQ,EAAE,OAAY;QAAZ,wBAAA,EAAA,YAAY;QAF1B,YAAO,GAAY,IAAI,OAAO,EAAE,CAAC;QAGrC,EAAE,CAAA,CAAC,QAAQ,IAAI,iBAAiB,CAAC;YAAC,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAEhF,UAAU;QACV,oBAAoB;QACpB,2CAA2C;QAC3C,yDAAyD;QACzD,6BAA6B;QAC7B,aAAa;QACb,QAAQ;QACR,MAAM;QAEN,qDAAqD;QACrD,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;QAEpC,oCAAoC;QACpC,oGAAoG;QAEpG,kDAAkD;QAClD,yCAAyC;QAEzC,yCAAyC;QACzC,wBAAwB;QACxB,4CAA4C;QAC5C,8DAA8D;QAC9D,sDAAsD;QACtD,kCAAkC;QAClC,+BAA+B;QAC/B,iCAAiC;QACjC,iBAAiB;QACjB,YAAY;QACZ,UAAU;QAEV,iCAAiC;QACjC,4DAA4D;QAC5D,oEAAoE;QACpE,QAAQ;QACR,MAAM;IACV,CAAC;IAED,uBAAG,GAAH,UAAI,KAAK,EAAE,OAAO;QAAE,iBAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,gCAAU;;QAC1B,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;YACnB,OAAO,GAAG,EAAE,CAAC;YACb,OAAO,GAAG,EAAE,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACnB,OAAO,GAAG,KAAK,CAAC;YAChB,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;YACnB,OAAO,GAAG,EAAE,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACnB,OAAO,GAAG,EAAE,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,KAAK,GAAG,CAAC,KAAK,CAAC;QACnB,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,OAAO,GAAG,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC5C,CAAC;QAED,IAAI,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC;QAE5B,4DAA4D;QAC5D,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;gBACd,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;oBAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC;YACjD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;oBAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;YAC/C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;oBAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;YAC/C,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAC5B,OAAO,GAAG,KAAG,OAAS,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,GAAM,UAAU,CAAC,KAAK,CAAC,UAAK,OAAS,CAAC;QACjD,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC5B,SAAS,CAAC,OAAO,CAAC,CAAC;YACvB,CAAC;YAED,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;IACL,CAAC;IAED,yBAAK,GAAL,UAAM,OAAO;QAAE,iBAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,gCAAU;;QACrB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IACD,yBAAK,GAAL,UAAM,OAAO;QAAE,iBAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,gCAAU;;QACrB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IACD,2BAAO,GAAP,UAAQ,OAAO;QAAE,iBAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,gCAAU;;QACvB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IACD,wBAAI,GAAJ,UAAK,OAAO;QAAE,iBAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,gCAAU;;QACpB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC;IACD,0BAAM,GAAN,UAAO,OAAO;QAAE,iBAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,gCAAU;;QACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC;IACD,+BAAW,GAAX,UAAY,OAAO;QAAE,iBAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,gCAAU;;QAC3B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC;IACD,wBAAI,GAAJ,UAAK,OAAO;QAAE,iBAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,gCAAU;;QACpB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC;IACD,2BAAO,GAAP,UAAQ,OAAO;QAAE,iBAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,gCAAU;;QACvB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC;IACD,yBAAK,GAAL,UAAM,OAAO;QAAE,iBAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,gCAAU;;QACrB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IAED;;;;;;;OAOG;IACH,yBAAK,GAAL,UAAM,KAAK;QACP,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAEhD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAE1B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YAAC,MAAM,KAAK,CAAC;IAC7C,CAAC;IASD,sBAAW,qBAAQ;QAPnB;;;;;;WAMG;aACH;YACI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAC;YACvD,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE3B,CAAC;;;OAAA;IAED;;;;;;;;;OASG;IACI,qBAAW,GAAlB,UAAmB,OAAO;QACtB,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,mFAAmF,CAAC,CAAC;QAClH,CAAC;QAED,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACI,wBAAc,GAArB;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3B,CAAC;IACL,gBAAC;AAAD,CA5LA,AA4LC,IAAA;AAEQ,8BAAS;AAElB,2BAA2B;AAC3B,mBAAmB","file":"JSW-Logger.js","sourcesContent":["\"use strict\";\n\n/**\n * @file JSW-Logger.js - Logging class extending Winston (@link https://github.com/winstonjs/winston) module\n * @version 0.0.1\n * \n * @author Eduardo Astolfi <eastolfi91@gmail.com>\n * @copyright 2016 Eduardo Astolfi <eastolfi91@gmail.com>\n * @license MIT Licensed\n */\n\nimport * as _ from \"lodash\";\n    \nconst TRANSPORT_PREFIX = \"EAMP_LOGGER\";\n\n// Singleton instance\nconst singleton = Symbol();\nconst singletonEnforcer = Symbol();\n\nclass Options {\n    public level: Number;                          // logging info, warn and error by default\n    public hideAllLogs: boolean;\n    public hideLevelLog: boolean;\n    public throwError: boolean;\n    public handledExceptionsLogPath: String;\n    \n    private __defaultOptions = {\n        level: 2,\n        hideAllLogs: false,\n        hideLevelLog: false,\n        throwError: true,\n        handledExceptionsLogPath: \"/../logs/handledException.log\"\n    };\n    \n    constructor(options?) {\n        if (_.isNil(options)) {\n            options = {}\n        }\n        \n        this.level = (options.level ? options.level : this.__defaultOptions.level);\n        this.hideAllLogs = (_.isBoolean(options.hideAllLogs) ? options.hideAllLogs : this.__defaultOptions.hideAllLogs);\n        this.hideLevelLog = (_.isBoolean(options.hideLevelLog) ? options.hideLevelLog : this.__defaultOptions.hideLevelLog);\n        this.throwError = (_.isBoolean(options.throwError) ? options.throwError : this.__defaultOptions.throwError);\n        this.handledExceptionsLogPath = (options.handledExceptionsLogPath ? options.handledExceptionsLogPath : this.__defaultOptions.handledExceptionsLogPath);\n    }\n}\n\nconst LEVELS = {\n    \"silly\":    6,\n    \"debug\":    5,\n    \"verbose\":  4,\n    \"log\":      3,\n    \"info\":     2,\n    \"warn\":     1,\n    \"error\":    0\n};\n\nconst LEVELS_STR = [\"ERROR\", \"WARN\", \"INFO\", \"LOG\", \"VERBOSE\", \"DEBUG\", \"SILLY\"];\n\nfunction interpolate(string, values) {\n    var str = string;\n    var i = 0;\n    \n    while (str.match(/%./)) {\n        var match = str.match(/%./)[0];\n    \n        if (match.toLowerCase() === \"%s\") {\n            str = str.replace(match, \"\" + values[i]);\n        } else if (match.toLowerCase() === \"%d\") {\n            str = str.replace(match, +values[i]);\n        }\n    \n        i++;\n    }\n\n    return str;\n}\n\n// function ensureFile(file, cb) {\n//     fs.exists(file, exists => {\n//         if (!exists) {\n//             fs.writeFile(file, \"\", err => {\n//                 cb(err);\n//             });\n//         } else {\n//             cb(null);\n//         }\n//     });\n// }\n\n/**\n * JSWLogger\n * \n * @module JSWLogger\n * @constructor\n * @since 1.0.0\n * \n * @classdesc Logging module singleton which inherits the Winston Logger module.\n *          By default: \n *              <ol>\n *                  <li>Writes all the HANDLED exceptions under a log file in \"logs/handledException.log\"</li>\n *                  <li>Writes in the console all warnings and erros</li>\n *              </ol>\n * \n * @param {Symbol} enforcer - Enforcer internal object to avoid instanciating as \"new JSWLogger()\"\n * @param {Object} [options] - Additional options\n * \n * @param {Boolean} [options.hideAllLogs=false] - When set to true hides all logs (usefull when running tests)\n * @param {Boolean} [options.throwError=true] - Whether if throw an exception when logged trought the Logger#throw method\n */\nclass JSWLogger {\n    private options: Options = new Options();\n    \n    constructor(enforcer, options = {}) {\n        if(enforcer != singletonEnforcer) throw new Error(\"Cannot construct singleton\");\n        \n        // super({\n        //     transports: [\n        //         new winston.transports.Console({\n        //             name: `${TRANSPORT_PREFIX}_debug-console`,\n        //             level: \"error\"\n        //         })\n        //     ]\n        // });\n        \n        //this.options = _.assign({}, this.options, options);\n        this.options = new Options(options);\n        \n        // Ensuring that the log file exists\n        // let handledExceptionsLogPath = path.resolve(__dirname + defaultOptions.handledExceptionsLogPath);\n        \n        // ensureFile(handledExceptionsLogPath, error => {\n        //     if (error) throw new Error(error);\n            \n        //     this.logger = new winston.Logger({\n        //         transports: [\n        //             new winston.transports.File({\n        //                 name: `${TRANSPORT_PREFIX}_exception-file`,\n        //                 filename: handledExceptionsLogPath,\n        //                 level: \"error\",\n        //                 json: false,\n        //                 colorize: true\n        //             })\n        //         ]\n        //     });\n            \n        //     if (options.hideAllLogs) {\n        //         this.remove(`${TRANSPORT_PREFIX}_debug-console`);\n        //         this.logger.remove(`${TRANSPORT_PREFIX}_exception-file`);\n        //     }\n        // });\n    }\n    \n    log(level, message, ...options) {\n        if (_.isNil(level)) {\n            level = LEVELS.log;\n            message = \"\";\n            options = [];\n        }\n        \n        if (_.isNil(message)) {\n            message = level;\n            level = LEVELS.log;\n            options = [];\n        }\n        \n        if (_.isNil(options)) {\n            options = [];\n        }\n        \n        if (_.isNaN(_.toNumber(level))) {\n            level = _.isNil(LEVELS[level]) ? LEVELS.log : LEVELS[level];\n        } else {\n            level = +level;\n        }\n        \n        if (options.length > 0) {\n            message = interpolate(message, options);\n        }\n        \n        let logMethod = console.log;\n        \n        // If level is lower than 0, that means we dont log anything\n        if (level > 0) {\n            if (level === 0) {          // Error\n                if (console.error) logMethod = console.error;\n            } else if (level === 1) {   // Warning\n                if (console.warn) logMethod = console.warn;\n            } else if (level === 2) {   // Information\n                if (console.info) logMethod = console.info;\n            }\n        }\n        \n        if (this.options.hideLevelLog) {\n            message = `${message}`;\n        } else {\n            message = `${LEVELS_STR[level]}: ${message}`;\n        }\n        \n        if (level <= this.options.level) {\n            if (!this.options.hideAllLogs) {\n                logMethod(message);\n            }\n            \n            return message;\n        } else {\n            return false;\n        }\n    }\n    \n    silly(message, ...options) {\n        return this.log(LEVELS.silly, message || \"\", options);\n    }\n    debug(message, ...options) {\n        return this.log(LEVELS.debug, message || \"\", options);\n    }\n    verbose(message, ...options) {\n        return this.log(LEVELS.verbose, message || \"\", options);\n    }\n    info(message, ...options) {\n        return this.log(LEVELS.info, message || \"\", options);\n    }\n    inform(message, ...options) {\n        return this.log(LEVELS.info, message || \"\", options);\n    }\n    information(message, ...options) {\n        return this.log(LEVELS.info, message || \"\", options);\n    }\n    warn(message, ...options) {\n        return this.log(LEVELS.warn, message || \"\", options);\n    }\n    warning(message, ...options) {\n        return this.log(LEVELS.warn, message || \"\", options);\n    }\n    error(message, ...options) {\n        return this.log(LEVELS.error, message || \"\", options);\n    }\n    \n    /**\n     * Method to throw a controlled exception, logging it to a log file.\n     * \n     * @method JSWLogger#throw\n     * \n     * @param {Error|String} error - The exception or message to be thrown.\n     * @param {Boolean} [throwError=true] - Same as JSWLogger->options->throwError\n     */\n    throw(error) {\n        if (_.isString(error)) error = new Error(error);\n        \n        this.error(error.message);\n        \n        if (this.options.throwError) throw error;\n    }\n    \n    /**\n     * Retrieves the current singleton instance, creating a new one if needed.\n     * \n     * @static\n     * \n     * @returns {JSWLogger} this - The singleton Instance\n     */\n    static get instance() {\n        if (_.isNil(this[singleton])) {\n            this[singleton] = new JSWLogger(singletonEnforcer);\n        }\n        \n        return this[singleton];\n        \n    }\n    \n    /**\n     * Retrieves the current singleton instance, creating a new one if needed. \n     * It allows, when creating the first time, a set of options. Otherwise, it will return the singleton instance\n     * \n     * @static\n     * \n     * @param {Object} [options] - Additional options. See {@link JSWLogger#constructor}\n     * \n     * @returns {JSWLogger} this - The singleton Instance\n     */\n    static getInstance(options) {\n        if (_.isNil(this[singleton])) {\n            this[singleton] = new JSWLogger(singletonEnforcer, options);\n        } else {\n            JSWLogger.instance.error(\"Singleton already instanciated. Ignoring options and retrieving current instance.\");\n        }\n        \n        return JSWLogger.instance;\n    }\n    \n    /**\n     * Destroy the current singleton instance\n     * \n     * @static\n     */\n    static __dropInstance() {\n        delete this[singleton];\n    }\n}\n\nexport { JSWLogger };\n\n// module.exports = Logger;\n// export = Logger;"]}